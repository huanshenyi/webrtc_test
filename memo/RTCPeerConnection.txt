# 基本形式
pc = new RTCPeerConnection([configuration]);
     # configuration
       sequence<RTCIceServer>   iceServers;
       RTCIceTransportPolicy    iceTransportPolicy = "all";
       RTCBundlePolicy          rtcpMuxPolicy = "balanced";
       DOMString                peerIdentity
       sequence<RTCCertificate> certificates;
       [EnforceRange]
       octet                    iceCandidatePollSize = 0;  
# RTCPeerConnection方法分類
  - メディア協商
  - Stream/Track
  - 送信関連方法 
  - 統計関連方法


# メディア協商
createOffer
  - aPromise=myPeerConnection.createOffer([options]);
    # options
      - iceRestart: iceを再起動することになる,Candidateの再度収取になる

      - voiceActivityDetection: 音声offの検査行うかどうか,defaultは開いてる
createAnswer
setLocalDescription
  - aPromise = myPc.setLocalDescription(sessionDescription);
setRemoteDescription
  - aPromise = myPc.setRemoteDescription(sessionDescription);

# Track
- addTrack
                          # どんなtrackをaddするのか、音声か動画か,streamはgetUsermedeaのapiで取得した
  rtpSender=myPc.addTrack(track,stream)
  Parameters
  - track  (RTCPeerConnectionの挿入するtrack)
  - stream (track存在するのstreamを指定)
- removeTrack
  - myPc.removeTrack(rtpSender)

# イベント
onnegotiationneeded  メディア相談
onicecandidate       iceの候補受けとった時に発生するイベント